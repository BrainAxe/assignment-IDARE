{"version":3,"sources":["components/UploadForm.js","components/TableData.js","components/GraphFigure.js","components/Home.js","App.js","index.js"],"names":["UploadForm","props","ref","useRef","useState","uploadFile","setUploadFile","loader","setLoader","style","width","height","display","justifyContent","alignItems","type","color","onSubmit","event","preventDefault","dataArray","FormData","append","axios","post","headers","then","response","current","value","onSubmitFormData","catch","error","console","log","className","htmlFor","name","id","onChange","target","files","TableData","href","fLink","tHeader","map","header","tData","slice","rows","row","cell","idx","GraphFigure","openGraph","e","i","tabContent","tabLinks","document","getElementsByClassName","length","replace","getElementById","pdfLink","x_data","y_data","download","onClick","data","x","y","mode","marker","layout","title","Home","responseData","setResponseData","csvLink","Object","keys","rData","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9911bf38.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport Loader from \"react-loader-spinner\";\n\nimport \"./UploadForm.css\";\n\nfunction UploadForm(props) {\n  const ref = useRef();\n  const [uploadFile, setUploadFile] = useState();\n  const [loader, setLoader] = useState(false);\n\n  const onChangeHandler = (event) => {\n    setUploadFile(event.target.files[0]);\n  };\n\n  const submitForm = (event) => {\n    event.preventDefault();\n\n    if (!uploadFile) {\n      console.log(\"no file\");\n    } else {\n      setLoader(true);\n      const dataArray = new FormData();\n      dataArray.append(\"file\", uploadFile);\n\n      // let uploadUrl = `${process.env.REACT_APP_BASE_URL}api/v1/upload-csv/` \n      let uploadUrl = \"/api/v1/upload-csv/\"; \n\n      axios\n        .post(\n          uploadUrl,\n          dataArray,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        )\n        .then((response) => {\n          setLoader(false);\n          ref.current.value = \"\";\n          // console.log(response);\n          props.onSubmitFormData(response);\n        })\n        .catch((error) => {\n          setLoader(false);\n          console.log(error);\n        });\n    }\n  };\n\n  if (loader) {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Loader type=\"ThreeDots\" color=\"#2BAD60\" height={100} width={100} />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <form onSubmit={submitForm} className=\"form-horizontal\">\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">CSV File Link </label>\n            <input\n              type=\"file\"\n              name=\"csv_file\"\n              id=\"csv_file\"\n              className=\"form-control\"\n              onChange={onChangeHandler}\n              ref={ref}\n            />\n                               \n            <button type=\"submit\">Upload</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default UploadForm;\n","import \"./TableData.css\";\n\nfunction TableData(props) {\n  return (\n    <div>\n      <button id=\"download\">\n        <a href={props.fLink}>Download CSV File</a>\n      </button>\n      <table>\n        <thead>\n          <tr>\n            {props.tHeader.map((header) => {\n              return <th key={header}>{header}</th>;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {props.tData.slice(0, 15).map((rows) => {\n            let row = rows.map((cell, idx) => <td key={idx}>{cell}</td>);\n            return <tr>{row}</tr>;\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TableData;\n","import React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport \"./GraphFigure.css\";\n\nfunction GraphFigure(props) {\n  const openGraph = (e) => {\n    let i, tabContent, tabLinks;\n    tabContent = document.getElementsByClassName(\"tabContent\");\n    for (i = 0; i < tabContent.length; i++) {\n      tabContent[i].style.display = \"none\";\n    }\n    tabLinks = document.getElementsByClassName(\"tabLinks\");\n    for (i = 0; i < tabLinks.length; i++) {\n      tabLinks[i].className = tabLinks[i].className.replace(\" active\", \"\");\n    }\n    document.getElementById(e.target.value).style.display = \"block\";\n    e.target.className += \" active\";\n  };\n\n  // let pdfLink = `${process.env.REACT_APP_BASE_URL}api/v1/download-pdf/?x_data=${props.x_data}&y_data=${props.y_data}`; \n  let pdfLink = `/api/v1/download-pdf/?x_data=${props.x_data}&y_data=${props.y_data}`; \n\n  return (\n    <div className=\"graphs\">\n      <button id=\"download\">\n        <a\n          href={pdfLink}\n          download\n        >\n          Download PDF\n        </a>\n      </button>\n      <div className=\"tab\">\n        <button className=\"tabLinks\" value=\"Scatter\" onClick={openGraph}>\n          Scatter Plot\n        </button>\n        <button className=\"tabLinks\" value=\"Box\" onClick={openGraph}>\n          Box Plot\n        </button>\n        <button className=\"tabLinks\" value=\"Histogram\" onClick={openGraph}>\n          Histogram\n        </button>\n      </div>\n      <hr />\n\n      <div id=\"Scatter\" className=\"tabContent\">\n        <Plot\n          data={[\n            {\n              x: props.x_data,\n              y: props.y_data,\n              type: \"scatter\",\n              mode: \"markers\",\n              marker: { color: \"red\" },\n            },\n          ]}\n          layout={{ width: 560, height: 420, title: \"A Scatter Plot\" }}\n        />\n      </div>\n      <div id=\"Box\" className=\"tabContent\">\n        <Plot\n          data={[\n            {\n              y: props.y_data,\n              type: \"box\",\n            },\n            {\n              y: props.x_data,\n              type: \"box\",\n            },\n          ]}\n          layout={{ width: 560, height: 420, title: \"A Box Plot\" }}\n        />\n      </div>\n      <div id=\"Histogram\" className=\"tabContent\">\n        <Plot\n          data={[\n            {\n              x: props.x_data,\n              type: \"histogram\",\n            },\n          ]}\n          layout={{ width: 560, height: 420, title: \"A Histogram Plot\" }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default GraphFigure;\n","import React, { useState } from \"react\";\n\nimport UploadForm from \"./UploadForm\";\nimport TableData from \"./TableData\";\nimport GraphFigure from \"./GraphFigure\";\n\nfunction Home() {\n  const [responseData, setResponseData] = useState({});\n\n  const submitFormDataHandler = (rData) => {\n    setResponseData(rData.data);\n  };\n\n  // let csvLink = process.env.REACT_APP_BASE_URL + responseData[\"link\"]\n  let csvLink = \"/\" + responseData[\"link\"];\n\n  if (Object.keys(responseData).length < 1) {\n    return (\n      <div>\n        <UploadForm onSubmitFormData={submitFormDataHandler}></UploadForm>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <TableData\n          tHeader={responseData[\"header\"]}\n          tData={responseData[\"data\"]}\n          fLink={csvLink}\n        />\n        <GraphFigure\n          x_data={responseData[\"x_data\"]}\n          y_data={responseData[\"y_data\"]}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import Home from './components/Home';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}